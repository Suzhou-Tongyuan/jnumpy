# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  RAWPY_JL_OPTS: --project=./jnumpy/tests/extension 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: ^3.7

      # Runs a single command using the runners shell
      - name: pip insatll
        run: python -m pip install numpy jill pytest find_libpython
        
      - name: find python dll
        run: echo "RAWPY_PY_DLL=$(python -m find_libpython)" >> $GITHUB_ENV
        
      - name: list env
        run: env
        
      - name: Setup Julia environment
        uses: julia-actions/setup-julia@v1.8.1
        with:
          version: 1.6
      
      - name: add TyPython
        run: julia --project=./jnumpy/tests/extension -e "import Pkg;Pkg.develop(url=\"./TyPython\")"
      
      - name: run pytest
        run: python -m pytest ./jnumpy/tests/test_core.py
      
      - name: Run Julia package tests
        run: julia --project=./TyPython --compiled-modules=no -e "import Pkg;Pkg.test(;coverage=true)"

      
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: ./TyPython/src
