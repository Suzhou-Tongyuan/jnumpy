# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    name: ${{ matrix.OS }} - Julia ${{ matrix.julia-version }} - Python ${{ matrix.python-version }} - ${{ github.event_name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        julia-version: ["1.6", "1.9", "1.11"]
        OS: [Ubuntu, macOS, Windows]
        python-version: ["3.7"]
        include:
          - os: Ubuntu
            image: ubuntu-22.04
          - os: Windows
            image: windows-2022
          - os: macOS
            image: macos-12
      fail-fast: false
    defaults:
      run:
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: ${{ matrix.python-version }}

      # Runs a single command using the runners shell
      - name: insatll jnumpy
        run: python -m pip install .

      # Runs a single command using the runners shell
      - name: pip insatll
        run: python -m pip install pytest find_libpython poetry

      - name: find python dll
        run: echo "TYPY_PY_DLL=$(python -m find_libpython)" >> $GITHUB_ENV

      - run: bash ./build.sh

      - name: Setup Julia environment
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}

      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-

      - name: run pytest test_core.py
        run: python -m pytest jnumpy/tests/test_core.py

      - name: run pytest test_fast_init.py
        run: python -m pytest jnumpy/tests/test_fast_init.py

      - name: Run Julia package tests
        uses: julia-actions/julia-runtest@v1
        with:
          project: ./TyPython

      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: ./TyPython/src
      - uses: codecov/codecov-action@v2
        with:
          files: lcov.info
